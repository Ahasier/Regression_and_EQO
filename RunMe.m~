%% Add path
added_path = [pwd,'/functions'];
addpath(added_path);

%% Set parameters and input arguments
numPermutations = 10; % Average over 10 permutations
phylogenyDependency = 0; % Groung truth beta's are Phylogenetically irrelavent
noiseLevel = 1; % Noise level = 1

numberOfTaxaInAGroup_list = [10 30 50]; % Set the number of taxa within a syntetic functional group
numSamples_list = [40 80 120]; % Set the number of samples

meshGrid.TaxaGroup = 5; % Set the mesh grid when
meshGrid.Samples = 10;

regressionMethod = 'OLS';
varargin = {'Beta0', 1, 'BetaEps', 0.5, 'Threshold', 'cv','RealAbd','On'};
[settings, fullIdentifier] = setOptionsAndNames(varargin{:});

%% Run computeAndSaveRegressionResults to get results files
for numberOfTaxaInAGroup = numberOfTaxaInAGroup_list
    for numSamples = numSamples_list
        computeAndSaveRegressionResults(numPermutations, phylogenyDependency, noiseLevel, numberOfTaxaInAGroup, numSamples, regressionMethod, varargin{:})
    end
end

%% Plot heatmaps
plotHeatmapsForRegressionResults(settings, fullIdentifier, numberOfTaxaInAGroup_list, numSamples_list);

%% Helper functions
function plotHeatmapsForRegressionResults(settings, fullIdentifier, numberOfTaxaInAGroup_list, numSamples_list)
% load OLSBeta0Map and EQOMap from file
OLSBeta0Map = csvread(['results/AccOLS',fullIdentifier,'.csv']);
OLSBeta0Map = OLSBeta0Map(numberOfTaxaInAGroup_list/5, numSamples_list/10);

EQOMap = csvread(['results/AccMCC_Beta0',num2str(settings.Beta0),'_BetaEps',num2str(settings.BetaEps),'_RealAbdOn_EQO.csv']);
EQOMap = EQOMap(numberOfTaxaInAGroup_list/5, numSamples_list/10);

% plot heatmaps
figure('Renderer', 'painters', 'Position', [0 0 1500 320]);
subplot(1,3,1)
h1 = plotMap(numberOfTaxaInAGroup_list, numSamples_list, EQOMap, 'EQO');
subplot(1,3,2)
h2 = plotMap(numberOfTaxaInAGroup_list, numSamples_list, OLSBeta0Map, 'OLS');
subplot(1,3,3)
h3 = plotGapMap(numberOfTaxaInAGroup_list, numSamples_list, OLSBeta0Map, 'OLS', EQOMap, 'EQO');

saveas(gcf,['results/Heatmap',fullIdentifier,'.jpg'])
end